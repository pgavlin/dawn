// Code generated by dawn-gen-builtins; DO NOT EDIT.

package {{.Package}}

{{with .Imports}}
import (
	{{range .}}
	{{with .Name}}{{.}} {{end}}"{{.Path}}"
	{{end}}
)
{{end}}

{{range .Functions}}
func {{with .Receiver}}({{.Name}} {{.Type}}) {{end}}{{.FactoryName}}() *starlark.Builtin {
	const doc = `{{sanitize .Docstring}}`
	return starlark.NewBuiltin("{{.Def}}", {{with .Receiver}}{{.Name}}.{{end}}{{.FunctionName}}).WithDoc(doc)
}

{{if ne .FunctionName .Name}}
func {{with .Receiver}}({{.Name}} {{.Type}}) {{end}}{{.FunctionName}}(thread *starlark.Thread, fn *starlark.Builtin, args starlark.Tuple, kwargs []starlark.Tuple) (starlark.Value, error) {
	{{if .Params}}
	var (
		{{range .Params}}
		{{.Name}} {{.Type}}
		{{end}}
	)
	if err := starlark.UnpackArgs(fn.Name(), args, kwargs{{range .Params}}, "{{.Def}}", &{{.Name}}{{end}}); err != nil {
		return nil, err
	}
	{{else}}
	if err := starlark.UnpackPositionalArgs(fn.Name(), args, kwargs, 0); err != nil {
		return nil, err
	}
	{{end}}
	val, err := {{with .Receiver}}{{.Name}}.{{end}}{{.Name}}(thread, fn{{range .Params}}, {{.Name}}{{end}})
	if err != nil {
		return nil, &starlark.EvalError{Msg: err.Error(), CallStack: thread.CallStack()}
	}
	return val, nil
}
{{end}}
{{end}}
