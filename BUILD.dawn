load("//.dawn:go_sources.dawn", "go_sources")

version = "0.1.0"

debug = parse_flag("debug", type=bool, help="True to run a debug build")

def go_binary(name, ldflags=None, output=None, docs=None, deps=None, goos=None, goarch=None):
    (suffix, env) = ("", {})
    if goos:
        suffix = f"{suffix}_{goos}"
        env["GOOS"] = goos
    if goarch:
        suffix = f"{suffix}_{goarch}"
        env["GOARCH"] = goarch

    gcflags = "-gcflags=\"all=-N -l\"" if debug else ""
    cmd = "install"
    if output:
        cmd = f"build -o {output}"

    ldflags = ldflags or ""

    @target(name=name.replace("-", "_")+suffix, docs=docs, deps=deps, sources=go_sources(path(f"//cmd/{name}")))
    def binary():
        sh.exec(f"go {cmd} {gcflags} {ldflags} github.com/pgavlin/dawn/cmd/{name}", env=env)

    return binary

dawn_gen_builtins = go_binary(
    name="dawn-gen-builtins",
    docs="Builds the dawn-gen-builtins tool for generating Starlark builtin wrappers.",
)

@target(deps=[dawn_gen_builtins], sources=["./cmd/dawn/repl_builtins.go"], generates=["./cmd/dawn/builtins.go"])
def dawn_cli_builtins():
    """
    Generates wrappers + documentation for CLI-only builtin functions.
    """

    sh.exec("dawn-gen-builtins ./cmd/dawn ./cmd/dawn/builtins.go ./docs/source/modules")


@target(deps=[dawn_gen_builtins], sources=["project.go", "project_builtins.go"], generates=["builtins.go", "docs/source/modules"])
def dawn_builtins():
    """
    Generates wrappers + documentation for builtin functions.
    """

    sh.exec("dawn-gen-builtins . builtins.go docs/source/modules")

ldflags = f"-ldflags=\"-X main.version={version}\""

dawn = go_binary(
    name="dawn",
    docs="Builds the dawn CLI.",
    ldflags=ldflags,
)

all_dawn_deps = []
for goos in ["darwin", "linux", "windows"]:
    for goarch in ["amd64"]:
        output = os.path.join("dist", f"dawn_{goos}_{goarch}", "dawn")
        bin = go_binary(name="dawn", ldflags=ldflags, output=output, docs=f"Builds the dawn CLI for {goos}/{goarch}.", goos=goos, goarch=goarch)
        all_dawn_deps.append(bin)

@target(deps=all_dawn_deps)
def dawn_goreleaser():
    """
    Builds the dawn CLI for various (OS, architecture) pairs and copies the
    results to the location expected by Goreleaser.
    """

@target(deps=[":dawn", "docs:site"])
def default():
    """
    Builds the dawn CLI and docs.
    """
